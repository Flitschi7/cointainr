"""
Frontend handler for serving the SvelteKit frontend from FastAPI.
This module provides a simplified implementation for serving static files
generated by SvelteKit's adapter-static.
"""

import os
import pathlib
from fastapi import FastAPI, Request
from fastapi.responses import FileResponse, JSONResponse, HTMLResponse
from fastapi.staticfiles import StaticFiles
import logging

logger = logging.getLogger(__name__)


def setup_frontend(app: FastAPI):
    """
    Set up routes to serve the SvelteKit frontend from FastAPI.

    This function:
    1. Mounts static files from the build directory
    2. Serves the index.html file for SPA routing
    3. Ensures API routes are not intercepted by static file serving
    """
    # Try different paths for static files (Docker vs local development)
    possible_static_dirs = [
        pathlib.Path("/app/static"),  # Docker container path
        pathlib.Path(__file__).parent.parent.parent
        / "frontend"
        / "build",  # Local dev path
        pathlib.Path("../frontend/build"),  # Alternative local path
    ]

    static_dir = None
    for path in possible_static_dirs:
        if path.exists():
            static_dir = path.resolve()
            logger.info(f"Found frontend static files at: {static_dir}")
            break

    if not static_dir:
        logger.warning(
            f"No static directory found. Tried: {[str(p) for p in possible_static_dirs]}"
        )

        # Set up a basic fallback route
        @app.get("/")
        async def no_frontend():
            return {
                "message": "Cointainr API is running",
                "status": "Frontend not available - static files not found",
                "api_docs": "/api/docs",
                "health": "/api/health",
            }

        return

    logger.info(f"Setting up frontend serving from {static_dir}")

    # Mount static assets directory for JS, CSS, and other assets
    # This handles all files in _app directory (immutable assets)
    if (static_dir / "_app").exists():
        app.mount(
            "/_app", StaticFiles(directory=str(static_dir / "_app")), name="static_app"
        )
        logger.info("Mounted /_app static files")

    # Mount other static files (favicon, robots.txt, etc.)
    static_files = ["favicon.png", "favicon.svg", "robots.txt", "manifest.json"]
    for static_file in static_files:
        file_path = static_dir / static_file
        if file_path.exists():

            @app.get(f"/{static_file}")
            async def serve_static_file(file_name=static_file):
                return FileResponse(str(static_dir / file_name))

    # SPA route handler - serve index.html for all non-API and non-static routes
    @app.get("/{full_path:path}")
    async def serve_spa(request: Request, full_path: str):
        # Skip API routes - these should be handled by FastAPI's router
        if full_path.startswith("api"):
            # This should not be reached if API routes are properly registered
            logger.warning(f"API route not handled by router: {full_path}")
            return JSONResponse(status_code=404, content={"detail": "Not Found"})

        # Check if the path exists as a static file first
        requested_path = static_dir / full_path
        if requested_path.exists() and requested_path.is_file():
            return FileResponse(str(requested_path))

        # For SPA routing, return the index.html file
        index_path = static_dir / "index.html"
        if index_path.exists():
            return FileResponse(str(index_path))

        # If index.html doesn't exist, return 404
        logger.error(f"index.html not found at {index_path}")
        return JSONResponse(status_code=404, content={"detail": "Frontend not found"})
